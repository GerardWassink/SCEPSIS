# SCEPSIS - Simple CPU Emulation Program (Student Instruction System)
#
# Language definition file version 1.1.6
#

#
# General form of instruction definition
# opcode mnem - CS [...] [- CS [...] ...]
#
# The first two microcode steps for every instruction are the same:
#	PCTO MARI - MEMO INRI CE
# They put the Program Counter (PCT) in the Memory Address Register (MAR) and
# 	then they get the contents of that memory location into the instruction register
# 	finally they bump the Program counter 1 up
#
# Example language definition

#
# NOP - Do nothing - value of PCT to MAR / value of memory to INR,  bump PCT

00 NOP PCTO MARI - MEMO INRI CE

#
# JMP - goto location - 
10 JMP PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO PCTI
#
# Conditional jumps - goto location depending on flags
11 JC  PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO SPCC
12 JZ  PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO SPCZ
13 JE  PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO SPCE
14 JL  PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO SPCL
15 JG  PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO SPCG

#
# LD[A|B|C] {value} - read a value into REG[A|B|C] from within the instruction
20 LDA PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO RGAI
21 LDB PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO RGBI
22 LDC PCTO MARI - MEMO INRI CE - PCTO MARI CE - MEMO RGCI

#
# OPA|B|C] - ouput the value from REG[A|B|C] to the output register
28 OPA PCTO MARI - MEMO INRI CE - RGAO OUTI
29 OPB PCTO MARI - MEMO INRI CE - RGBO OUTI
2A OPC PCTO MARI - MEMO INRI CE - RGCO OUTI

#
# RD[A|B|C] {address} - read a value into REG[A|B|C] from a location in memory
50 RDA PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO RGAI CE
51 RDB PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO RGBI CE
52 RDC PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO RGCI CE

#
# WR[A|B|C] {address} - write a value from REG[A|B|C] to a location in memory
54 WRA PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - RGAO MEMI CE
55 WRB PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - RGBO MEMI CE
56 WRC PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - RGCO MEMI CE

#
# I2M {address} - read a value from the input register to a location in memory
70 I2M PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - INPO MEMI CE

#
# M2O {address} - put a value from memory into the ouput register
78 M2O PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - OUTI MEMO CE

#
# PSHA - put the content of register A on the stack
80 PSHA PCTO MARI - MEMO INRI CE - SPD - RGAO STKI

#
# POPA - pull the content of register A from the stack
84 POPA PCTO MARI - MEMO INRI CE - STKO RGAI - SPI

#
#                                                   Instruction for the ALU
#
#                               ### IMMEDIATE ALU instructions ###
#
# ADI - Add Immediate
E0 ADI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE
# SBI - Subtract Immediate
E1 SBI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE
# CPI - Compare Immediate
E2 CPI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE
# ANI - AND Immediate
E3 ANI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE
# ORI - OR Immediate
E4 ORI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE
# XRI - XOR Immediate
E5 XRI PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO ALUI - EXC - CE

#
#                                  ### MEMORY ALU instructions ###
#
# ADM - Add Memory
E8 ADM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE
# SBM - Subtract Memory
E9 SBM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE
# CPM - Compare Memory
EA CPM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE
# ANM - AND Memory
EB ANM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE
# ORM - OR Memory
EC ORM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE
# XRM - XOR Memory
ED XRM PCTO MARI - MEMO INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI - EXC - CE

#
#                                    ### REGB ALU instructions ###
#
# ADB - Add Memory
F0 ADB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# SBB - Subtract Memory
F1 SBB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# CPB - Compare Memory
F2 CPB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# ANB - AND Memory
F3 ANB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# ORB - OR Memory
F4 ORB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# XRB - XOR Memory
F5 XRB PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC

#
#                                    ### REGC ALU instructions ###
#
# ADC - Add Memory
F8 ADC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# SBC - Subtract Memory
F9 SBC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# CPC - Compare Memory
FA CPC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# ANC - AND Memory
FB ANC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# ORC - OR Memory
FC ORC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC
# XRC - XOR Memory
FD XRC PCTO MARI - MEMO INRI CE - RGBO ALUI - EXC

#
# STP - Stop the processor (bump PCT first to prepare for continuation)
# Bump PCT, then HLT
FF STP CE - HLT

