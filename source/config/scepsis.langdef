# SCEPSIS - Simple CPU Emulation Program (Student Instruction System)
#
# Language definition file
#

#
# General form of instruction definition
# opcode mnem - CS [...] [- CS [...] ...] # comment text
#
# The first two microcode steps for every instruction are the same:
#	PCTO MARI - FTCH INRI CE
# They put the Program Counter (PCT) in the Memory Address Register (MAR) and
# 	then they get the contents of that memory location into the instruction register
# 	finally they bump the Program counter 1 up
#
# ###
#
# Below you find my language definition as an example. feel free to create your own!
#
# ###

#
# ### NOP - No OPeration; do nothing
00 NOP     | PCTO MARI - FTCH INRI CE

#
# ### JMP - JuMP to location
#
10 JMP  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO PCTI

#
# ### Conditional jumps - goto location depending on flags
#
11 JC   XX | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - MEMO SPCC	# Carry set
12 JZ   XX | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - MEMO SPCZ	# Zero
13 JE   XX | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - MEMO SPCE	# Equal
14 JL   XX | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - MEMO SPCL	# Less
15 JG   XX | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - MEMO SPCG	# Greater

#
# ### CALL {address} - Call a routine at address
#
18 CALL xx | PCTO MARI - FTCH INRI CE - PCTO MARI CE2 - SPD - PCTO STKI - MEMO PCTI	

#
# ### RET - Return from a CALL to a routine
#
1C RET     | PCTO MARI - FTCH INRI CE - STKO PCTI SPI


#
# ### LI[A|B|C] {value} - Load Immediate value XX into REG[A|B|C]
#
20 LIA  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO RGAI CE2
21 LIB  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO RGBI CE2
22 LIC  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO RGCI CE2

#
# ### STA|B|C] {value} - Store value from REG[A|B|C] into memory address XX
#
28 STA  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI CE2 - RGAO MEMI
29 STB  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI CE2 - RGBO MEMI
2A STC  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI CE2 - RGCO MEMI

#
# ### OPA|B|C] - ouput the value from REG[A|B|C] to the output register
#
30 OPA     | PCTO MARI - FTCH INRI CE - RGAO OUTI
31 OPB     | PCTO MARI - FTCH INRI CE - RGBO OUTI
32 OPC     | PCTO MARI - FTCH INRI CE - RGCO OUTI

#
# ### RD[A|B|C] {address} - Load Memory value into REG[A|B|C]
#
50 LMA  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO RGAI CE2
51 LMB  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO RGBI CE2
52 LMC  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO RGCI CE2

#
# ### I2M {address} - store value from input register to a location in memory
# ### M2O {address} - put a value from memory into the ouput register
#
70 I2M  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI CE2 - INPO MEMI
71 M2O  XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI CE2 - OUTI MEMO

#
# ### PSH[A|B|C] - put the content of register [A|B|C] on the stack
#
80 PSHA    | PCTO MARI - FTCH INRI CE - SPD - RGAO STKI
81 PSHB    | PCTO MARI - FTCH INRI CE - SPD - RGBO STKI
82 PSHC    | PCTO MARI - FTCH INRI CE - SPD - RGCO STKI

#
# ### POP[A|B|C] - pull the content of register [A|B|C] from the stack
#
84 POPA    | PCTO MARI - FTCH INRI CE - STKO RGAI - SPI
85 POPB    | PCTO MARI - FTCH INRI CE - STKO RGBI - SPI
86 POPC    | PCTO MARI - FTCH INRI CE - STKO RGCI - SPI

#
#                               ### IMMEDIATE ALU instructions ###
#
E0 ADI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# Add Immediate
E1 SBI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# Subtract Immediate
E2 CPI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# Compare Immediate
E3 ANI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# AND Immediate
E4 ORI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# OR Immediate
E5 XRI XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO ALUI CE2 - EXC	# XOR Immediate

#
#                                  ### MEMORY ALU instructions ###
#
E8 ADM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# Add from memory
E9 SBM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# Subtract memory
EA CPM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# Compare with mamory
EB ANM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# AND memory
EC ORM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# OR memory
ED XRM XX | PCTO MARI - FTCH INRI CE - PCTO MARI - MEMO MARI - MEMO ALUI CE2 - EXC	# XOR memory

#
#                                    ### REGB ALU instructions ###
#
F0 ADB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Add Register B
F1 SBB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Subtract Register B
F2 CPB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Compare Register B
F3 ANB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# AND Register B
F4 ORB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# OR Register B
F5 XRB    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# XOR Register B

#
#                                    ### REGC ALU instructions ###
#
F8 ADC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Add Register C
F9 SBC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Subtract Register C
FA CPC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# Compare Register C
FB ANC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# AND Register C
FC ORC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# OR Register C
FD XRC    | PCTO MARI - FTCH INRI CE - RGBO ALUI - EXC				# XOR Register C

#
# ### HLT - Stop the processor (bump PCT first to prepare for continuation)
#
FF HLT    | CE - HLT

