# SCEPSIS - Simple CPU Emulation Program (Student Instruction System)
#
# Language definition file
#

#
# General form of instruction definition
# opcode mnem - CS [...] [- CS [...] ...]
#
# The first two microcode steps for every instruction are the same:
#	PCTO MARI - RAMO INRI CE
# They put the Program Counter (PCT) in the Memory Address Register (MAR) and
# 	then they get the contents of that memory location into the instruction register
# 	finally they bump the Program counter 1 up
#
# Example language definition

#
# NOP - Do nothing - value of PCT to MAR / value of memory to INR,  bump PCT

00 NOP PCTO MARI - RAMO INRI CE

#
# RD[A|B] {address} - read a value into REG[A|B] from a location in memory
50 RDA PCTO MARI - RAMO INRI CE - PCTO MARI - RAMO RGAI CE
54 RDB PCTO MARI - RAMO INRI CE - PCTO MARI - RAMO RGBI CE

#
# WR[A|B] {address} - write a value from REG[A|B] to a location in memory
51 WRA PCTO MARI - RAMO INRI CE - PCTO MARI - RAMI RGAO CE
55 WRB PCTO MARI - RAMO INRI CE - PCTO MARI - RAMI RGBO CE

#
# I2M {address} - read a value from the input register to a location in memory
70 I2M PCTO MARI - RAMO INRI CE - PCTO MARI - INPO RAMI CE

#
# M2O {address} - put a value from memory into the ouput register
78 M2O PCTO MARI - RAMO INRI CE - PCTO MARI - OUTI RAMO CE

#
# STP - Stop the processor (bump PCT first to prepare for continuation)
# Bump PCT, then HLT

FF STP CE - HLT

