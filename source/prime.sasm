#
# ### Finding primes from 1 to 255
#
Start	NOP
		LDA		X'01	
		STA		Number		# Number to investigate for 'prime-ness'
		STA		Count		# Counter from 1 to Prime
#
Ploop	NOP					# Outer loop where Number goes from 1 to 255
		LDA		Number		# load current value of Number to investigate
		STA		Calc		# Store it in Calc
#
Cloop	NOP					# Inner loop investigating Number
		LDA 	Calc		# Get Calc result
		LDB		Count		# Load number to subtract
		SBB					# Calc = Calc - Count
		STA		Calc
		JZ		FoundPR		# Found Prime! Output!
		JC		BumpN		# Became negative, go Reset Count and bump Number
#
		LDA		Count		# Increment 
		ADI		X'01		#   Inner loop value
		STA		Count
		JC		ResetC		# Count > 255, go Reset Count and bump Number
		JMP		Cloop		
#
FoundPR	NOP
		LDA Number			# Load Number
		OPA					# Output Number when Prime
#
ResetC	NOP
		LDA		X'01		# Reset Count to 1
		STA		Count
#
BumpN	NOP
		LDA		Number		# Get Number
		ADI		X'01		# Add 1
		JC		END			# Became > 255, end program
<<<<<<< HEAD
		J		Ploop
=======
		JMP		Ploop
>>>>>>> f6c69376e5e099cc8e21b138c1e0af3ae418bb23
#
End		HLT					# End program
#
# ### Storage area
#
Number	NOP
Count	NOP
Calc	NOP
#
